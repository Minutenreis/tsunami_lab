##
# @author Alexander Breuer (alex.breuer AT uni-jena.de)
# @section DESCRIPTION
# Continuous integration using GitHub Actions.
##
name: Tsunami Lab

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: 0 0 * * *

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Dependencies
        run: |
          wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-ubuntu2204.pin
          sudo mv cuda-ubuntu2204.pin /etc/apt/preferences.d/cuda-repository-pin-600
          wget https://developer.download.nvidia.com/compute/cuda/12.3.2/local_installers/cuda-repo-ubuntu2204-12-3-local_12.3.2-545.23.08-1_amd64.deb
          sudo dpkg -i cuda-repo-ubuntu2204-12-3-local_12.3.2-545.23.08-1_amd64.deb
          sudo cp /var/cuda-repo-ubuntu2204-12-3-local/cuda-*-keyring.gpg /usr/share/keyrings/
          sudo apt-get update
          sudo apt-get install scons
          sudo apt-get install valgrind
          sudo apt-get install cppcheck
          sudo apt-get install libnetcdf-c++4-dev
          sudo apt-get install cuda-compiler-12-3
          git submodule init
          git submodule update

      - name: Static Code Analysis
        run:
          cppcheck src/ --template=gcc --force --error-exitcode=1 --suppressions-list=suppressions.txt

      - name: Sanitize
        run: |
          scons mode=debug+san
          ./build/tests
          ./build/tsunami_lab -u "DamBreak1d 10 2" -s "FWave" -b "OPEN WALL" 25
          scons mode=release+san
          ./build/tests
          ./build/tsunami_lab 500

      - name: Valgrind
        run: |
          scons mode=debug
          valgrind ./build/tests
          valgrind ./build/tsunami_lab -u "DamBreak1d 10 2" -s "FWave" -b "OPEN WALL" 25

      - name: Release
        run: |
          scons
          ./build/tests
          ./build/tsunami_lab 500
